# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.31
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _rfi
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


new_doublearray = _rfi.new_doublearray
delete_doublearray = _rfi.delete_doublearray
doublearray_getitem = _rfi.doublearray_getitem
doublearray_setitem = _rfi.doublearray_setitem
new_intarray = _rfi.new_intarray
delete_intarray = _rfi.delete_intarray
intarray_getitem = _rfi.intarray_getitem
intarray_setitem = _rfi.intarray_setitem
absl = _rfi.absl
sq = _rfi.sq
testing = _rfi.testing
testing2 = _rfi.testing2
get_rms = _rfi.get_rms
xi_square_fit = _rfi.xi_square_fit
get_fit = _rfi.get_fit
flatten = _rfi.flatten
mask_array = _rfi.mask_array
rfi_find_dTdf = _rfi.rfi_find_dTdf
hi_f_spikes = _rfi.hi_f_spikes
rfi_flag = _rfi.rfi_flag
clean = _rfi.clean


