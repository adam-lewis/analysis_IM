"""Unit tests for the fitsGBT module and it's main class fitsGBT.Processor."""

import unittest
import scipy as sp

import fitsGBT

# This fits file generated by the script make_test_GBT_fits_file.py
fits_test_file_name = 'test_file_GBTfits.fits'
# This file has known properties:
IF_set = (695., 725.)
scan_set = (113, 114)
ntimes_scan = 10
npol = 4
ncal = 2


class TestInit(unittest.TestCase) :
    
    def setUp(self) :
        self.FileProcessor = fitsGBT.Processor(fits_test_file_name)

    def test_gets_IFs(self) :
        for ii in range(len(IF_set)) :
            self.assertAlmostEqual(self.FileProcessor.IF_set[ii], IF_set[ii])

    def test_gets_scans(self) :
        for ii in range(len(scan_set)) :
            self.assertEqual(self.FileProcessor.scan_set[ii], scan_set[ii])

    def test_gets_IF_inds(self) :
        tempIF_set = self.FileProcessor.fitsdata.field('CRVAL1') \
                                                      [IF_unique_inds]
        for ii in range(len(IF_set)) :
            self.assertAlmostEqual(tempIF_set, IF_set[ii])
            
    def tearDown(self) :
        del self.FileProcessor

#class TestReadProcess(self) :

class TestGetIFScanInds(unittest.TestCase) :
    
    def setUp(self) : 
        self.FileProcessor = fitsGBT.Processor(fits_test_file_name)
        self.IFs_all = sp.array(self.FileProcessor.field('CRVAL1')/1E6)
        self.IFs_all  = self.IFs.round(0)
        self.scans_all = sp.array(self.FileProcessor.field('SCAN'))

    def test_gets_all_IF_records(self) :
        pass
        
    
    def tearDown(self) :
        del self.FileProcessor








if __name__ == '__main__' :
    unittest.main()
